{"ast":null,"code":"import _classCallCheck from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport JSON from '../json/Movies.json';\nimport MovieListItem from \"./MovieListItem\";\nimport TextField from '@material-ui/core/TextField';\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieList, _Component);\n\n  function MovieList(props) {\n    var _this;\n\n    _classCallCheck(this, MovieList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MovieList).call(this, props));\n\n    _this.filterMovies = function (event) {\n      var filtered = _this.state.movies.filter(function (item) {\n        //toUpperCase, so user doesn't have to bother about Upper or Lower case sensitive titles.\n        return item.title.toUpperCase().indexOf(event.target.value.toUpperCase()) > -1;\n      });\n\n      _this.setState({\n        filtered: filtered,\n        searching: event.target.value.length > 0\n      });\n    };\n\n    _this.state = {\n      movies: JSON,\n      filtered: [],\n      searching: false\n    };\n    return _this;\n  } //this function filters json, looking for a title corresponding to given word\n\n\n  _createClass(MovieList, [{\n    key: \"render\",\n    value: function render() {\n      //we want to display either whole list of movies or filtered list depending on the users input\n      var movies = this.state.filtered.length === 0 ? this.state.movies : this.state.filtered;\n\n      if (this.state.filtered.length === 0 && this.state.searching === true) {\n        movies = [];\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-search\",\n        label: \"Search\",\n        margin: \"normal\",\n        varian: \"outlined\",\n        placeholder: \"Search\",\n        onChange: this.filterMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(MovieListItem, {\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MovieList;\n}(Component);\n\nexport default MovieList;","map":{"version":3,"sources":["/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/src/components/MovieList.js"],"names":["React","Component","JSON","MovieListItem","TextField","MovieList","props","filterMovies","event","filtered","state","movies","filter","item","title","toUpperCase","indexOf","target","value","setState","searching","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AAGA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;IAEMC,S;;;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAYnBC,YAZmB,GAYJ,UAACC,KAAD,EAAW;AACxB,UAAIC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,IAAI,EAAI;AAC9C;AACA,eAAOA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,OAAzB,CAAiCR,KAAK,CAACS,MAAN,CAAaC,KAAb,CAAmBH,WAAnB,EAAjC,IAAqE,CAAC,CAA7E;AACD,OAHc,CAAf;;AAKA,YAAKI,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAEA,QADE;AAEZW,QAAAA,SAAS,EAAGZ,KAAK,CAACS,MAAN,CAAaC,KAAb,CAAmBG,MAAnB,GAA4B;AAF5B,OAAd;AAID,KAtBkB;;AAGjB,UAAKX,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAGT,IADE;AAEXO,MAAAA,QAAQ,EAAG,EAFA;AAGXW,MAAAA,SAAS,EAAG;AAHD,KAAb;AAHiB;AAQlB,G,CAGD;;;;;6BAaS;AACP;AACA,UAAIT,MAAM,GAAG,KAAKD,KAAL,CAAWD,QAAX,CAAoBY,MAApB,KAA+B,CAA/B,GAAmC,KAAKX,KAAL,CAAWC,MAA9C,GAAuD,KAAKD,KAAL,CAAWD,QAA/E;;AACA,UAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBY,MAApB,KAA+B,CAA/B,IAAoC,KAAKX,KAAL,CAAWU,SAAX,KAAyB,IAAhE,EAAsE;AACpET,QAAAA,MAAM,GAAG,EAAT;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,iBAAd;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAA+C,QAAA,MAAM,EAAC,QAAtD;AAA+D,QAAA,MAAM,EAAC,UAAtE;AAAiF,QAAA,WAAW,EAAC,QAA7F;AAAsG,QAAA,QAAQ,EAAE,KAAKJ,YAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAEI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF;AAMD;;;;EAvCqBV,S;;AA0CxB,eAAeI,SAAf","sourcesContent":["import React , { Component } from 'react';\n\n\nimport JSON from '../json/Movies.json';\nimport MovieListItem from \"./MovieListItem\"\nimport TextField from '@material-ui/core/TextField';\n\nclass MovieList extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      movies : JSON,\n      filtered : [],\n      searching : false\n    }\n  }\n\n\n  //this function filters json, looking for a title corresponding to given word\n  filterMovies = (event) => {\n    let filtered = this.state.movies.filter(item => {\n      //toUpperCase, so user doesn't have to bother about Upper or Lower case sensitive titles.\n      return item.title.toUpperCase().indexOf(event.target.value.toUpperCase()) > -1;\n    });\n\n    this.setState({\n      filtered: filtered,\n      searching:  event.target.value.length > 0 \n    });\n  }\n\n  render() {\n    //we want to display either whole list of movies or filtered list depending on the users input\n    let movies = this.state.filtered.length === 0 ? this.state.movies : this.state.filtered;\n    if(this.state.filtered.length === 0 && this.state.searching === true) {\n      movies = []\n    }\n    \n    return (\n      <div>\n          <TextField id=\"outlined-search\" label=\"Search\" margin=\"normal\" varian=\"outlined\" placeholder=\"Search\" onChange={this.filterMovies}></TextField>\n          <MovieListItem movies={movies}/>          \n      </div>\n    );\n  }\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}