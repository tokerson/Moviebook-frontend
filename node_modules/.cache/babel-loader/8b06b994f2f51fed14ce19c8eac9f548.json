{"ast":null,"code":"import _classCallCheck from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/src/components/Movie.js\";\nimport React, { Component } from 'react';\nimport JSON from '../json/Movies.json';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie() {\n    _classCallCheck(this, Movie);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Movie).apply(this, arguments));\n  }\n\n  _createClass(Movie, [{\n    key: \"componentWillMount\",\n    //this one checks if an URL is created by clicking a movie or by typing in a url, if u typed it in, then it looks\n    //for a movie in a database, else movie's data is passed throught params.\n    value: function componentWillMount() {\n      var _this = this;\n\n      console.log(this.props.match.params);\n\n      if (this.props.location.hasOwnProperty('params') === false) {\n        var movies = JSON;\n        var movie = movies.filter(function (movie) {\n          return movie.title === _this.props.match.params.title;\n        });\n        this.setState({\n          title: movie[0].title,\n          director: movie[0].director,\n          coverURL: movie[0].coverURL,\n          premiere: movie[0].premiere\n        });\n      } else {\n        this.setState({\n          title: this.props.location.params.title,\n          director: this.props.location.params.director,\n          coverURL: this.props.location.params.coverURL,\n          premiere: this.props.location.params.premiere\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.coverURL,\n        alt: \"coverage of this movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Title : \", this.state.title), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Director: \", this.state.director));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/tokarz/Documents/Projects/BD2-MovieBook/frontend/src/components/Movie.js"],"names":["React","Component","JSON","Movie","console","log","props","match","params","location","hasOwnProperty","movies","movie","filter","title","setState","director","coverURL","premiere","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,K;;;;;;;;;;;;;AAEF;AACA;yCACoB;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA7B;;AACA,UAAG,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,cAApB,CAAmC,QAAnC,MAAiD,KAApD,EAA0D;AAClD,YAAMC,MAAM,GAAGT,IAAf;AACA,YAAMU,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAe,UAAAD,KAAK,EAAI;AAClC,iBAAOA,KAAK,CAACE,KAAN,KAAgB,KAAI,CAACR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBM,KAA/C;AACH,SAFa,CAAd;AAGA,aAAKC,QAAL,CAAc;AACVD,UAAAA,KAAK,EAAGF,KAAK,CAAC,CAAD,CAAL,CAASE,KADP;AAEVE,UAAAA,QAAQ,EAAGJ,KAAK,CAAC,CAAD,CAAL,CAASI,QAFV;AAGVC,UAAAA,QAAQ,EAAGL,KAAK,CAAC,CAAD,CAAL,CAASK,QAHV;AAIVC,UAAAA,QAAQ,EAAGN,KAAK,CAAC,CAAD,CAAL,CAASM;AAJV,SAAd;AAMP,OAXD,MAYK;AACD,aAAKH,QAAL,CAAc;AACVD,UAAAA,KAAK,EAAG,KAAKR,KAAL,CAAWG,QAAX,CAAoBD,MAApB,CAA2BM,KADzB;AAEVE,UAAAA,QAAQ,EAAG,KAAKV,KAAL,CAAWG,QAAX,CAAoBD,MAApB,CAA2BQ,QAF5B;AAGVC,UAAAA,QAAQ,EAAG,KAAKX,KAAL,CAAWG,QAAX,CAAoBD,MAApB,CAA2BS,QAH5B;AAIVC,UAAAA,QAAQ,EAAG,KAAKZ,KAAL,CAAWG,QAAX,CAAoBD,MAApB,CAA2BU;AAJ5B,SAAd;AAMH;AAEJ;;;6BAEO;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWF,QAArB;AAA+B,QAAA,GAAG,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa,KAAKE,KAAL,CAAWL,KAAxB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKK,KAAL,CAAWH,QAA1B,CAHJ,CADJ;AAOC;;;;EArCef,S;;AAwCpB,eAAeE,KAAf","sourcesContent":["import React , { Component } from 'react';\nimport JSON from '../json/Movies.json';\n\nclass Movie extends Component {\n    \n    //this one checks if an URL is created by clicking a movie or by typing in a url, if u typed it in, then it looks\n    //for a movie in a database, else movie's data is passed throught params.\n    componentWillMount(){\n        console.log(this.props.match.params);\n        if(this.props.location.hasOwnProperty('params') === false){\n                const movies = JSON;\n                const movie = movies.filter( movie => {\n                    return movie.title === this.props.match.params.title ;\n                })\n                this.setState({\n                    title : movie[0].title,\n                    director : movie[0].director,\n                    coverURL : movie[0].coverURL,\n                    premiere : movie[0].premiere\n                });\n        }\n        else {\n            this.setState({\n                title : this.props.location.params.title,\n                director : this.props.location.params.director,\n                coverURL : this.props.location.params.coverURL,\n                premiere : this.props.location.params.premiere\n            });\n        }\n\n    }\n\n    render(){\n    return(\n        <div>\n            <img src={this.state.coverURL} alt=\"coverage of this movie\"></img>\n            <h3>Title : {this.state.title}</h3>\n            <h3>Director: {this.state.director}</h3>\n        </div>\n    );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}